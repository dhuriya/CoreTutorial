@model Product

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>
<div class="text-let">
    <p>Product ID: @Model.Id</p>
    <p>Product Name: @Model.Name</p>
</div>

<h1>Partial view from AJAX</h1>
<div id="someDive" class="text-center"></div>


<div>
    <table id="tblProducts" class="tblProducts">
        <thead>
            <tr>
                <th align="left" class="productth">ProductID</th>
                <th align="left" class="productth">ProductName</th>
                <th align="left" class="productth">Descrtption</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
<h2>Please Download the file</h2>
<form id="downloadForm" method="get" action="/Home/FileContentResultDownload">
    <button type="submit">Download File</button>
</form>

<!-- Include the jQuery library from Google's hosted libraries -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script>
    // Ensure the DOM is fully loaded before executing the script
    $(document).ready(function () {
        // Define an object 'rawdata' with a property 'ProductId' set to '10'
        var rawdata = { 'ProductId': '10' };
        // Make an AJAX request
        $.ajax({
            // Specify the request type as GET
            type: "GET",
            // Specify the URL to which the request is sent
            url: "/Home/Details/",
            // Include the data to be sent with the request
            data: rawdata,
            // Define a callback function to handle a successful response
            success: function (viewHTML) {
                // Find the HTML element with the ID 'someDiv' and set its inner HTML to the response from the server
                $("#someDive").html(viewHTML);
            },
            // Define a callback function to handle an error response
            error: function (errorData) {
                // Call a function 'onError' with the error data as an argument
                onError(errorData);
            }
        });
    });
    // Define the onError function to handle error responses
    function onError(errorData) {
        // Display the error data in an alert box
        alert("An error occurred: " + errorData.responseText);
    }
</script>
<script>
    // Wait until the document is fully loaded
    $(document).ready(function () {
        // Remove all rows from the table body with id 'tblProducts'
        $("#tblProducts tbody tr").remove();
        // Define the data to be sent to the server
        var rawdata = { 'Category': 'Electronics' };
        // Make an AJAX request to the server
        $.ajax({
            type: "GET", // HTTP method to be used for the request
            url: "/Home/JsonResultByAjax/", // URL to which the request is sent
            data: rawdata, // Data to be sent to the server
            dataType: 'json', // Expected data type of the server response
            // Function to be called if the request succeeds
            success: function (data) {
                var items = ''; // Initialize an empty string to accumulate the HTML
                // Iterate over each item in the received data
                $.each(data, function (i, item) {
                    // Construct a table row with the item data
                    var rows = "<tr>"
                        + "<td class='prtoducttd'>" + item.Id + "</td>"
                        + "<td class='prtoducttd'>" + item.Name + "</td>"
                        + "<td class='prtoducttd'>" + item.Description + "</td>"
                        + "</tr>";
                    // Append the constructed row to the table body with id 'tblProducts'
                    $('#tblProducts tbody').append(rows);
                });
            },
            // Function to be called if the request fails
            error: function (errorData) {
                // Alert the error response
                alert(errorData);
                // Parse the error response JSON
                var ErrorResponse = jQuery.parseJSON(errorData.responseText);
                // Alert the details of the error
                alert("Message: " + ErrorResponse.Message);
                alert("StackTrace: " + ErrorResponse.StackTrace);
                alert("ExceptionType: " + ErrorResponse.ExceptionType);
            }
        });
    });
</script>